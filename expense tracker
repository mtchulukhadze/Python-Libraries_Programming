import pandas as pd
import pyodbc

class Expenses:
    def __init__(self, name, category, amount):
        self.name = name
        self.category = category
        self.amount = amount

    def __repr__(self):
        return f"<expenses: {self.name, self.category, self.amount}>"


def main():
    print("running expense tracker")

    # get user input
    expense = get_user_expenses()
    print(expense)
    # write their expense to sql database
    save_expenses_to_sql(expense)
    # read the summarized data
    read_the_data()


def get_user_expenses():
    print("get_user expense")
    expense_name = input("enter expense name: ")
    expense_amount = int(input("enter expense amount: "))
    print(f"you have entered {expense_name}, {expense_amount}")

    expense_category = [
        "food", "home", "work",
        "gym", "restaurant"
    ]

    while True:
        print("select category: ")
        for i, category in enumerate(expense_category):
            print(f"{i + 1}. {category}")

        value_range = [f"1 - {len(expense_category)}"]
        select_index = int(input(f"choose a category: {value_range}"))

        if select_index in range(1, len(expense_category) + 1):
            expense_cat = expense_category[select_index - 1]
            new_exp = Expenses(name=expense_name, category=expense_cat, amount=expense_amount)
            return new_exp
        else:
            print("invalid number")


user = 'DESKTOP-3QJN7S3' + "\)" + "user"  # sql server user name
user_rep = user.replace(")", "")

conn = pyodbc.connect("Driver={SQL Server};"
                      "Server=DESKTOP-3QJN7S3;"  # Server name
                      f"uid={user_rep}"
                      "Database=SQL_T;"  # selected database
                      "Trusted_Connection=yes;")

cursor = conn.cursor()


def save_expenses_to_sql(expense):
    try:
        cursor.execute('''drop table if exists SQL_T.dbo.expenses_tracker''')
        cursor.commit()
    except Exception as e:
        cursor.rollback()
        print("invalid access")

    try:
        cursor.execute(
            '''create table SQL_T.dbo.expenses_tracker (product varchar(32), category varchar(32), amount int)'''
        )
        cursor.commit()
    except Exception as e:
        cursor.rollback()
        print("can't create table")

    try:
        cursor.execute(
            'insert into SQL_T.dbo.expenses_tracker (product, category, amount) values (?, ?, ?);',
            (expense.name, expense.category, expense.amount),
        )
        cursor.commit()
        print("Expense saved to the database")
    except Exception as e:
        cursor.rollback()
        print("can't insert data:", e)


def read_the_data():
    print("read data from database")
    df = pd.read_sql_query(r"select * from SQL_T.dbo.expenses_tracker", conn)
    print(df)


if __name__ == "__main__":
    main()
